from twitter import Twitter, OAuth, TwitterHTTPError, TwitterStream

try:
    import json
except ImportError:
    import simplejson as json

# Import the necessary methods from "twitter" library


# Variables that contains the user credentials to access Twitter API 


class TweetFetch:


    def fetch(self):
    
        
        ACCESS_TOKEN = '704014440409108480-lCPbJXuHznMhKqrs5eawZ4UIUNMUVzE'
        ACCESS_SECRET = '4R9B8kGQVwkedwCp5JnL9AT5jGWQI3Revx1h7eYPt6GRf'
        CONSUMER_KEY = 'Gpd8ogDa5nDpxPTwk1uBoMxPy'
        CONSUMER_SECRET = 'H7UI3cEBa9ES5oifTrSEbuk0jnNmlGkSOX4SotJeERKJzLonjI'

        oauth = OAuth(ACCESS_TOKEN, ACCESS_SECRET, CONSUMER_KEY, CONSUMER_SECRET)

# Initiate the connection to Twitter Streaming API
        twitter_stream = TwitterStream(auth=oauth)

# Get a sample of the public data following through Twitter
        iterator = twitter_stream.statuses.sample()

# Print each tweet in the stream to the screen 
# Here we set it to stop after getting 1000 tweets. 
# You don't have to set it to stop, but can continue running 
# the Twitter API to collect data for days or even longer.
        
         
        tweet_count = 1
        t_file = open("tweets.txt",'w')
        for tweet in iterator:
            t_file.write(json.dumps(tweet))
            for line in t_file:
                try:
        # Read in one line of the file, convert it into a json object 
                    tweet = json.loads(line.strip())
                    if 'text' in tweet: # only messages contains 'text' field is a tweet
                        return tweet['text'] # content of the tweet
                        
            #return json.dumps(tweet)  
    # Twitter Python Tool wraps the data returned by Twitter 
    # as a TwitterDictResponse object.
    # We convert it back to the JSON format to print/score
        
    
    # The command below will do pretty printing for JSON data, try it out
    # print json.dumps(tweet, indent=4)
       
       
